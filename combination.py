#-------------------------------------------------------------------------------
# Name:        module1
# Purpose:
#
# Author:      emartin
#
# Created:     19/10/2018
# Copyright:   (c) emartin 2018
# Licence:     <your licence>
#-------------------------------------------------------------------------------
from itertools import combinations, product

exclusionDict = {
        's43': ['s43_U45_p354', 's43_U40_p353', 's43_U35_p352', 's43_U30_p351', 's43_U50_p355'],
        's47': ['s47_U15_p292', 's49_U46_p409', 's47_U10_p291', 's49_U46_p398', 's49_U45_p408', 's49_U45_p397',
                's49_U44_p407', 's49_U44_p396', 's49_U40_p406', 's49_U40_p395', 's49_U39_p405', 's49_U39_p394',
                's49_U35_p404', 's49_U35_p393', 's49_U34_p403', 's49_U34_p392', 's49_U30_p402', 's49_U30_p391',
                's49_U25_p401', 's49_U25_p390'],
        's49': ['s49_U46_p409', 's50_U42_p386', 's49_U46_p398', 's49_U45_p408', 's49_U45_p397', 's49_U44_p407',
                's49_U44_p396', 's49_U40_p406', 's49_U40_p395', 's49_U39_p405', 's49_U39_p394', 's49_U35_p404',
                's49_U35_p393', 's49_U34_p403', 's49_U34_p392', 's49_U30_p402', 's49_U30_p391', 's49_U25_p401',
                's49_U25_p390', 's49_U23_p400', 's49_U23_p389', 's49_U20_p399', 's49_U20_p388', 's50_U40_p385',
                's50_U35_p384', 's50_U30_p383', 's50_U25_p382', 's50_U20_p381'],
        's50': ['s50_U25_p382', 's50_U20_p381', 's50_U15_p380', 's50_U10_p379', 's50_U42_p386', 's60_U45_p378',
                's50_U40_p385', 's50_U35_p384', 's50_U30_p383'],
        's19': ['Nemguem_p423', 'Nemguem_p421', 'Nemguem_p420', 'Nemguem_p419', 'Nemguem_p411', 'Nemguem_p417',
                'Nemguem_p410', 'Nemguem_p422'],
        's54': ['s43_U50_p355', 's54_U45_p363', 's54_U35_p361', 's54_U30_p360', 's54_U25_p359', 's54_U20_p358',
                's54_U15_p357', 's54_U10_p356'],
        's56': ['s54_U45_p363', 's56_U40_p370', 's54_U35_p361', 's54_U30_p360', 's54_U25_p359', 's54_U20_p358',
                's54_U15_p357', 's54_U10_p356', 's56_U35_p369', 's56_U30_p368', 's56_U25_p367', 's56_U20_p366',
                's56_U15_p365', 's56_U10_p364'],
        's60': ['s60_U15_p372', 's60_U10_p371', 's54_U45_p363', 's56_U40_p370', 's60_U45_p378', 's54_U35_p361',
                's54_U30_p360', 's54_U25_p359', 's54_U20_p358', 's54_U15_p357', 's54_U10_p356', 's56_U35_p369',
                's56_U30_p368', 's56_U25_p367', 's56_U20_p366', 's56_U15_p365', 's56_U10_p364', 's60_U40_p377',
                's60_U35_p376', 's60_U30_p375', 's60_U25_p374', 's60_U20_p373'],
        's61': ['s61_U45_p332', 's61_U40_p331', 's61_U35_p330', 's61_U32_p329', 's61_U30_p328', 's61_U25_p327',
                's61_U20_p326', 's61_U15_p325', 's61_U10_p324', 's61_U50_p333'],
        's32': ['s32_U45_p288', 's32_U40_p287', 's32_U40_p299', 's32_U35_p286', 's32_U35_p298', 's32_U30_p297',
                's32_U25_p296', 's32_U20_p295', 's32_U15_p294', 's32_U10_p331'],
        's33': ['s33_U30_p329', 's33_U36_p330', 's33_U20_p327', 's33_U15_p326', 's33_U10_p325', 's33_U25_p328'],
        's34': ['s34_U50_p312', 's34_U50_p310'],
        's35': ['s35_U35_p337', 's35_U30_p336', 's35_U25_p335', 's35_U40_p274'],
        's36': ['s36_U30_p279', 's36_U25_p278', 's36_U35_p280'],
        's38': ['s38_U25_p340', 's38_U20_p339', 's38_U15_p338', 's38_U30_p341'],
        's42': ['s42_U45_p348', 's42_U40_p347', 's42_U55_p350', 's42_U50_p349'],
        's16': ['s16_U11_p406', 's16_U11_p405', 's16_U11_p398', 's16_U11_p391', 's16_U32_p362', 's31_U30_p323',
                's31_U20_p321', 's16_U32_p359', 's16_U30_p372', 's16_U20_p370', 's16_U11_p358', 's16_U11_p355'],
        's28': ['s28_U32_p113', 's28_U30_p112', 's28_U30_p111', 's28_U25_p110', 's28_U25_p109', 's28_U32_p114'],
        's29': ['s29_U40_p153', 's29_U35_p158', 's29_U40_p159', 's29_U30_p157', 's29_U35_p152', 's29_U25_p156',
                's29_U25_p150', 's29_U20_p155', 's29_U30_p151'],
        's30': ['s29_U40_p153', 's29_U35_p158', 's29_U40_p159', 's30_U15_p140', 's29_U35_p152', 's29_U25_p156',
                's29_U25_p150', 's29_U20_p155', 's30_U10_p139', 's29_U30_p157', 's29_U30_p151'],
        's31': ['s31_U30_p323', 's31_U20_p321', 's31_U10_p319']
    }


exclusionList= [
        ['s43_U45_p354', 's43_U40_p353', 's43_U35_p352', 's43_U30_p351', 's43_U50_p355'],
        ['s47_U15_p292', 's49_U46_p409', 's47_U10_p291', 's49_U46_p398', 's49_U45_p408', 's49_U45_p397',
                's49_U44_p407', 's49_U44_p396', 's49_U40_p406', 's49_U40_p395', 's49_U39_p405', 's49_U39_p394',
                's49_U35_p404', 's49_U35_p393', 's49_U34_p403', 's49_U34_p392', 's49_U30_p402', 's49_U30_p391',
                's49_U25_p401', 's49_U25_p390'],
        ['s49_U46_p409', 's50_U42_p386', 's49_U46_p398', 's49_U45_p408', 's49_U45_p397', 's49_U44_p407',
                's49_U44_p396', 's49_U40_p406', 's49_U40_p395', 's49_U39_p405', 's49_U39_p394', 's49_U35_p404',
                's49_U35_p393', 's49_U34_p403', 's49_U34_p392', 's49_U30_p402', 's49_U30_p391', 's49_U25_p401',
                's49_U25_p390', 's49_U23_p400', 's49_U23_p389', 's49_U20_p399', 's49_U20_p388', 's50_U40_p385',
                's50_U35_p384', 's50_U30_p383', 's50_U25_p382', 's50_U20_p381'],
        ['s50_U25_p382', 's50_U20_p381', 's50_U15_p380', 's50_U10_p379', 's50_U42_p386', 's60_U45_p378',
                's50_U40_p385', 's50_U35_p384', 's50_U30_p383'],
        ['Nemguem_p423', 'Nemguem_p421', 'Nemguem_p420', 'Nemguem_p419', 'Nemguem_p411', 'Nemguem_p417',
                'Nemguem_p410', 'Nemguem_p422'],
        ['s43_U50_p355', 's54_U45_p363', 's54_U35_p361', 's54_U30_p360', 's54_U25_p359', 's54_U20_p358',
                's54_U15_p357', 's54_U10_p356'],
        ['s54_U45_p363', 's56_U40_p370', 's54_U35_p361', 's54_U30_p360', 's54_U25_p359', 's54_U20_p358',
                's54_U15_p357', 's54_U10_p356', 's56_U35_p369', 's56_U30_p368', 's56_U25_p367', 's56_U20_p366',
                's56_U15_p365', 's56_U10_p364'],
        ['s60_U15_p372', 's60_U10_p371', 's54_U45_p363', 's56_U40_p370', 's60_U45_p378', 's54_U35_p361',
                's54_U30_p360', 's54_U25_p359', 's54_U20_p358', 's54_U15_p357', 's54_U10_p356', 's56_U35_p369',
                's56_U30_p368', 's56_U25_p367', 's56_U20_p366', 's56_U15_p365', 's56_U10_p364', 's60_U40_p377',
                's60_U35_p376', 's60_U30_p375', 's60_U25_p374', 's60_U20_p373'],
        ['s61_U45_p332', 's61_U40_p331', 's61_U35_p330', 's61_U32_p329', 's61_U30_p328', 's61_U25_p327',
                's61_U20_p326', 's61_U15_p325', 's61_U10_p324', 's61_U50_p333'],
        ['s32_U45_p288', 's32_U40_p287', 's32_U40_p299', 's32_U35_p286', 's32_U35_p298', 's32_U30_p297',
                's32_U25_p296', 's32_U20_p295', 's32_U15_p294', 's32_U10_p331'],
        ['s33_U30_p329', 's33_U36_p330', 's33_U20_p327', 's33_U15_p326', 's33_U10_p325', 's33_U25_p328'],
        ['s34_U50_p312', 's34_U50_p310'],
        ['s35_U35_p337', 's35_U30_p336', 's35_U25_p335', 's35_U40_p274'],
        ['s36_U30_p279', 's36_U25_p278', 's36_U35_p280'],
        ['s38_U25_p340', 's38_U20_p339', 's38_U15_p338', 's38_U30_p341'],
        ['s42_U45_p348', 's42_U40_p347', 's42_U55_p350', 's42_U50_p349'],
        ['s16_U11_p406', 's16_U11_p405', 's16_U11_p398', 's16_U11_p391', 's16_U32_p362', 's31_U30_p323',
                's31_U20_p321', 's16_U32_p359', 's16_U30_p372', 's16_U20_p370', 's16_U11_p358', 's16_U11_p355'],
        ['s28_U32_p113', 's28_U30_p112', 's28_U30_p111', 's28_U25_p110', 's28_U25_p109', 's28_U32_p114'],
        ['s29_U40_p153', 's29_U35_p158', 's29_U40_p159', 's29_U30_p157', 's29_U35_p152', 's29_U25_p156',
                's29_U25_p150', 's29_U20_p155', 's29_U30_p151'],
        ['s29_U40_p153', 's29_U35_p158', 's29_U40_p159', 's30_U15_p140', 's29_U35_p152', 's29_U25_p156',
                's29_U25_p150', 's29_U20_p155', 's30_U10_p139', 's29_U30_p157', 's29_U30_p151'],
        ['s31_U30_p323', 's31_U20_p321', 's31_U10_p319']
    ]
def main():

    thisScenario = ['s31_U30_p323', 's29_U40_p153', 's42_U45_p348', 's31_U20_p321']
    excludes = exclusionList

    validCombos = []
    for x in comb_with_excludes(thisScenario, 2, excludes):
        validCombos.append(x)
    print(len(validCombos))
    print (validCombos)
##    result =check_exclusions(thisScenario)
##    print result



def comb_with_excludes(lst, r, exclude_groups):
    ex_set = {e for es in exclude_groups for e in es}
    tmp = exclude_groups + [[x] for x in lst if x not in ex_set]
    return (p for c in combinations(tmp, r) for p in product(*c))

##def check_exclusions(scenarioDams):
##    for dam in scenarioDams:
##        site = dam[:3]
##
##        exclusionDams = exclusionDict[site]
##        a = list(set(scenarioDams).intersection(exclusionDams))
##        print a
##        if len(a) >1:
##            return False
##            break
##    return True



if __name__ == '__main__':
    main()
